#lang racket
(require racket/draw racket/file racket/math racket/class racket/gui/base)
(struct htg (home-dir heroines traps))
(define setup (htg (current-directory) "heroine" "trap")) ;; THERE SHOULD BE TWO DIRECTORIES "heroine" AND "trap" IN THE EXECUTION DIRECTORY.
(define (list-files path) (filter (lambda (f) (file-exists? f) f) (directory-list (build-path (htg-home-dir setup) path))))
(define (list-traps) (map (lambda (f) (build-path (htg-home-dir setup) (htg-traps setup) f)) (list-files (htg-traps setup))))
(define (list-heroines) (map (lambda (f) (build-path (htg-home-dir setup) (htg-heroines setup) f)) (list-files (htg-heroines setup))))
(define (get-rnd l) (list-ref (l) (exact-floor (abs (* (length (l)) (random (make-pseudo-random-generator)))))))
(define (heroine) (read-bitmap (get-rnd list-heroines)))
(define (trap) (read-bitmap (get-rnd list-traps)))
(define f (new frame% [label "Happy Thoughts Generator"] [alignment '(left top)]))
(define pv (new vertical-panel% [parent f] [alignment '(left top)]))
(define p1 (new horizontal-panel% [parent pv] [alignment '(left top)] [min-height 50] [stretchable-height 50]))
(define b1 (new button% [label "Random!"] [parent p1] [callback (lambda (button event)
                                                                  (map (lambda (ch) (send ch on-paint)) (send p2 get-children)))]))
(define label1 (new canvas% [parent p1] [paint-callback
                                         (lambda (canvas dc)
                                           (send dc set-scale 2 2)
                                           (send dc set-background "WhiteSmoke")
                                           (send dc clear)
                                           (send dc set-text-foreground "navy")
                                           (send dc draw-text "HAPPY THOUGHTS!" 0 0))]))
(define p2 (new horizontal-panel% [parent pv] [alignment '(left top)]))
(define pic1 (new canvas% [parent p2] [min-height 500] [min-width 500] [paint-callback (lambda (canvas dc)
                                                                                         (send dc set-background "black")
                                                                                         (send dc clear)
                                                                                         (send dc draw-bitmap (heroine) 0 0))]))
(define pic2 (new canvas% [parent p2] [min-height 500] [min-width 500] [paint-callback (lambda (canvas dc)
                                                                                         (send dc set-background "black")
                                                                                         (send dc clear)
                                                                                         (send dc draw-bitmap (trap) 0 0))]))
(send f show #t)